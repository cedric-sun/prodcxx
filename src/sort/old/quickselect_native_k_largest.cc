// cesun, 9/17/20 8:36 AM.

namespace qselect {
    static int *arr;
    static int n;
    static int k; // find the greatest k elements

    // TODO: can we boost when interval size is small?
    // [l,r]
    // after return arr[n-k] is the k-th largest element, and arr[n-k,n-1] are
    // the k largest elements but unordered.
    void _qselect(int l, int r) {
        if (l < r) {
            int gauge = arr[(l + r) >> 1];
            int i = l - 1, j = r + 1;
            while (1) {
                while (arr[++i] < gauge);
                while (arr[--j] > gauge);
                if (i >= j) break;
                int tmp = arr[i];
                arr[i] = arr[j];
                arr[j] = tmp;
            }
            const int rsize = n - j - 1;
            if (rsize < k) {
                _qselect(l, j);
            } else if (rsize >= k) {
                // equal here is critical: even right size is exactly k, we still need to finish our job
                _qselect(j + 1, r);
            }
        }
    }

    void qselect(int *_arr, int _n, int _k) {
        arr = _arr;
        n = _n;
        k = _k;
        _qselect(0, n - 1);
    }
}


//test: https://leetcode.com/problems/kth-largest-element-in-an-array/
#include <vector>

using std::vector;

class Solution {
public:
    int findKthLargest(vector<int> &nums, int k) {
        qselect::qselect(nums.data(), nums.size(), k);
        return nums[nums.size() - k];
    }
};

#include <cstdio>

int main() {
    Solution x;
    vector<int> data{873, 758, 336, 40, 924, 799, 620, 24, 32, 723, 820, 938, 941, 778, 772, 459, 574, 552, 148, 251, 720, 527, 91, 101, 60, 598, 525, 830, 344, 420, 275, 409, 505, 644, 933, 288, 809,
                     222, 312, 571, 709, 194, 785, 35, 835, 18, 610, 937, 140, 238, 738, 467, 299, 58, 417, 347, 753, 895, 682, 13, 333, 400, 351, 802, 342, 859, 182, 75, 428, 134, 69, 228, 492, 824,
                     54, 886, 405, 356, 973, 748, 510, 930, 731, 25, 290, 816, 978, 325, 655, 168, 589, 848, 899, 827, 84, 647, 810, 602, 314, 337, 36, 327, 757, 987, 779, 413, 832, 10, 213, 199, 500,
                     740, 570, 745, 202, 497, 936, 429, 844, 744, 175, 707, 28, 601, 455, 554, 363, 575, 775, 766, 940, 340, 118, 196, 232, 821, 444, 701, 19, 474, 398, 34, 245, 979, 427, 410, 572,
                     209, 984, 714, 181, 814, 488, 201, 654, 630, 396, 968, 441, 447, 248, 512, 604, 650, 131, 189, 433, 919, 513, 975, 331, 242, 243, 449, 416, 698, 359, 92, 71, 477, 401, 142, 7,
                     526, 796, 484, 291, 755, 750, 870, 381, 700, 211, 687, 890, 227, 161, 705, 374, 801, 733, 313, 550, 230, 951, 665, 603, 191, 742, 121, 272, 260, 760, 173, 693, 268, 676, 61, 916,
                     617, 183, 548, 85, 88, 833, 815, 656, 80, 908, 544, 29, 42, 355, 683, 107, 992, 462, 960, 918, 787, 83, 102, 986, 371, 375, 910, 577, 480, 446, 425, 247, 346, 255, 164, 551, 780,
                     470, 279, 784, 445, 195, 803, 339, 214, 155, 57, 649, 309, 377, 493, 89, 117, 585, 882, 900, 542, 800, 857, 957, 151, 258, 456, 204, 658, 457, 726, 902, 538, 379, 971, 365, 939,
                     263, 948, 754, 783, 114, 529, 549, 789, 273, 880, 187, 541, 349, 360, 403, 217, 896, 399, 689, 825, 536, 615, 842, 974, 515, 648, 48, 616, 357, 633, 917, 885, 378, 292, 864, 79,
                     348, 710, 851, 868, 847, 442, 737, 985, 622, 595, 945, 952, 534, 407, 891, 380, 167, 229, 845, 178, 539, 426, 370, 390, 561, 818, 662, 841, 73, 485, 305, 621, 797, 129, 154, 78,
                     672, 223, 829, 749, 669, 645, 613, 763, 657, 418, 969, 252, 892, 725, 632, 597, 903, 628, 404, 430, 618, 4, 530, 389, 315, 193, 782, 81, 990, 274, 31, 63, 695, 450, 822, 320, 153,
                     881, 922, 684, 197, 999, 771, 605, 136, 926, 99, 770, 719, 276, 412, 487, 253, 397, 795, 367, 2, 623, 660, 580, 888, 588, 764, 694, 495, 171, 776, 55, 865, 388, 458, 184, 373,
                     451, 856, 316, 578, 704, 635, 959, 212, 508, 912, 998, 27, 498, 185, 317, 50, 736, 362, 366, 794, 172, 558, 858, 452, 198, 586, 734, 883, 582, 26, 152, 128, 364, 747, 627, 678,
                     119, 545, 105, 997, 619, 125, 927, 437, 599, 52, 811, 528, 422, 994, 817, 923, 659, 765, 65, 239, 724, 111, 106, 929, 956, 838, 826, 562, 269, 149, 840, 631, 989, 177, 914, 235,
                     983, 728, 302, 301, 743, 587, 946, 454, 158, 751, 788, 906, 546, 66, 277, 504, 190, 361, 278, 113, 264, 174, 432, 877, 20, 435, 531, 192, 90, 259, 286, 120, 285, 836, 393, 988,
                     963, 483, 39, 294, 568, 913, 319, 774, 122, 6, 135, 819, 188, 236, 667, 338, 163, 855, 502, 300, 200, 878, 233, 478, 611, 804, 713, 231, 640, 708, 262, 685, 468, 767, 157, 59,
                     606, 931, 215, 132, 77, 335, 661, 874, 133, 72, 257, 722, 812, 343, 636, 884, 967, 330, 699, 691, 533, 162, 306, 295, 68, 246, 828, 594, 875, 98, 12, 717, 792, 499, 240, 47, 596,
                     831, 935, 675, 203, 74, 169, 739, 144, 385, 324, 762, 786, 679, 141, 915, 629, 869, 522, 664, 668, 23, 115, 823, 637, 524, 559, 509, 415, 448, 414, 942, 287, 41, 972, 237, 958,
                     265, 146, 608, 520, 82, 469, 953, 993, 980, 97, 332, 846, 465, 808, 218, 746, 706, 863, 472, 581, 9, 791, 0, 905, 38, 402, 970, 166, 137, 145, 383, 735, 464, 256, 670, 854, 567,
                     592, 518, 224, 681, 741, 139, 307, 130, 431, 323, 284, 352, 5, 56, 614, 950, 369, 382, 729, 225, 67, 494, 889, 49, 96, 3, 607, 8, 210, 600, 692, 281, 249, 966, 16, 634, 907, 466,
                     965, 179, 834, 506, 438, 234, 511, 516, 769, 671, 147, 560, 51, 30, 376, 241, 793, 180, 156, 206, 955, 638, 690, 532, 496, 995, 207, 280, 62, 563, 160, 981, 696, 759, 303, 21,
                     387, 116, 537, 519, 843, 216, 887, 350, 639, 37, 569, 921, 406, 861, 76, 486, 897, 143, 219, 95, 871, 395, 318, 673, 503, 46, 898, 507, 523, 250, 798, 893, 297, 962, 584, 124,
                     894, 805, 806, 564, 773, 372, 879, 932, 697, 475, 976, 977, 293, 476, 109, 853, 715, 954, 652, 254, 928, 244, 612, 165, 45, 220, 716, 93, 850, 573, 170, 341, 866, 322, 419, 308,
                     732, 282, 328, 266, 44, 653, 626, 491, 576, 721, 777, 643, 345, 453, 126, 934, 920, 86, 289, 641, 543, 712, 334, 436, 583, 718, 283, 651, 104, 947, 949, 553, 421, 557, 103, 688,
                     208, 609, 481, 521, 761, 501, 473, 479, 461, 490, 867, 460, 624, 329, 590, 100, 298, 296, 944, 311, 482, 686, 261, 94, 703, 514, 860, 321, 663, 727, 358, 138, 43, 423, 909, 674,
                     424, 625, 434, 411, 439, 593, 368, 711, 925, 579, 53, 186, 876, 386, 996, 556, 11, 839, 566, 226, 443, 22, 112, 964, 310, 353, 394, 205, 781, 872, 271, 862, 14, 680, 768, 123,
                     849, 489, 535, 159, 64, 221, 110, 33, 517, 911, 565, 547, 267, 752, 991, 852, 384, 730, 87, 642, 471, 70, 901, 408, 756, 591, 17, 391, 790, 304, 463, 15, 540, 108, 666, 440, 982,
                     555, 943, 837, 677, 127, 326, 270, 702, 1, 150, 646, 813, 392, 961, 807, 354, 904, 176};
    int k = 778;
    printf("%d\n", x.findKthLargest(data, k));
}
